import React, { useState } from "react";
import { Whatsong_2 } from '../../asset/img/index';

const Allsong = () => {
    const categoryList = [
        { value: "category", name: "Ïπ¥ÌÖåÍ≥†Î¶¨" },
        { value: "ballad", name: "Î∞úÎùºÎìú" },
        { value: "rnb", name: "R&B" },
        { value: "dance", name: "ÎåÑÏä§" },
        { value: "hiphop", name: "ÌûôÌï©" },
        { value: "jaze", name: "Ïû¨Ï¶à" },
        { value: "trote", name: "Ìä∏Î°úÌä∏" },
        { value: "rock", name: "ÎùΩ" },
    ];

    const ageList = [
        { value: "age", name: "Ïó∞Î†πÎåÄ" },
        { value: "10s", name: "10ÎåÄ" },
        { value: "20s", name: "20ÎåÄ" },
        { value: "30s", name: "30ÎåÄ" },
        { value: "40s", name: "40ÎåÄ" },
    ];

    const [selectedCategories, setSelectedCategories] = useState([]);
    const [selectedAges, setSelectedAges] = useState([]);
    const [likedSongs, setLikedSongs] = useState([]);

    const handleCategorySelect = (e) => {
        const value = e.target.value;
        setSelectedCategories((prevCategories) => {
            if (prevCategories.includes(value)) {
                return prevCategories.filter((category) => category !== value);
            } else {
                return [...prevCategories, value];
            }
        });
    };

    const handleAgeSelect = (e) => {
        const value = e.target.value;
        setSelectedAges((prevAges) => {
            if (prevAges.includes(value)) {
                return prevAges.filter((age) => age !== value);
            } else {
                return [...prevAges, value];
            }
        });
    };

    // Ïπ¥ÌÖåÍ≥†Î¶¨ Ï†úÍ±∞ Ìï®Ïàò
    const removeCategory = (category) => {
        setSelectedCategories((prevCategories) =>
            prevCategories.filter((item) => item !== category)
        );
    };

    // Ï∞ú Í∏∞Îä•ÏùÑ ÏúÑÌïú Ìï®Ïàò
    const toggleLike = (song) => {
        setLikedSongs((prevLikedSongs) => {
            if (prevLikedSongs.includes(song)) {
                return prevLikedSongs.filter((likedSong) => likedSong !== song);
            } else {
                return [...prevLikedSongs, song];
            }
        });
    };

    // ÌïúÍ∏Ä Ïù¥Î¶Ñ Î≥ÄÌôò Ìï®Ïàò
    const getCategoryName = (value) => {
        const category = categoryList.find((item) => item.value === value);
        return category ? category.name : '';
    };

    const getAgeName = (value) => {
        const age = ageList.find((item) => item.value === value);
        return age ? age.name : '';
    };

    return (
        <div className="Allsong">
            <div className="topword">
                <div><img className="Whatsong_2" alt="song" src={Whatsong_2} /></div>
                <div className="word">My page</div>
            </div>

            <div className="fillter">
                <div className="word2">Ï†ÑÏ≤¥ ÎÖ∏Îûò</div>
            </div>
            <div className="catabox">
                <div className="select1">
                    <div className="song_select">
                        <select value="category" onChange={handleCategorySelect}>
                            {categoryList.map((item) => (
                                <option value={item.value} key={item.value}>
                                    {item.name}
                                </option>
                            ))}
                        </select>
                    </div>
                    <div className="selected_categories">
                        {selectedCategories.map((category) => (
                            <span
                                key={category}
                                className="selected_catesong"
                                style={{ marginRight: '8px', padding: '5px', backgroundColor: '#f0f0f0', borderRadius: '5px', display: 'inline-flex', alignItems: 'center' }}
                            >
                                {getCategoryName(category)}
                                <button
                                    onClick={() => removeCategory(category)}
                                    style={{ marginLeft: '10px', cursor: 'pointer', background: 'transparent', border: 'none', color: 'black' }}
                                >
                                    X
                                </button>
                            </span>
                        ))}
                    </div>
                </div>
                <div className="select2">
                    <div className="song_select">
                        <select value="age" onChange={handleAgeSelect}>
                            {ageList.map((item) => (
                                <option value={item.value} key={item.value}>
                                    {item.name}
                                </option>
                            ))}
                        </select>
                    </div>
                    <div className="selected_ages">
                        <span>{selectedAges.map(getAgeName).join(' ')}</span>
                    </div>
                    <div>Ï†úÎ™© Î∞è Í∞ÄÏàò Í≤ÄÏÉâ</div>
                </div>
            </div>

            <div className="Song">
                <div className="song1">
                    <div className="no">No.</div>
                    <div className="no2">ÎÖ∏Îûò Ï†úÎ™©</div>
                    <div className="no3">Ïπ¥ÌÖåÍ≥†Î¶¨</div>
                    <div className="no4">Í∞ÄÏàò</div>
                    <div className="no5"></div>

                </div>
                {/* ÏòàÏãú ÎÖ∏Îûò Î¶¨Ïä§Ìä∏ */}
                <div className="song2">
                    <div className="no">01.</div>
                    <div className="no2">Îàà</div>
                    <div className="no3">Î∞úÎùºÎìú</div>
                    <div className="no4">Ï†ïÏ§ÄÏùº</div>
                    <div className="no5">
                        <button
                            onClick={() => toggleLike("Îàà")}
                            style={{
                                background: "none",
                                border: "none",
                                cursor: "pointer",
                                fontSize: "24px" // ÌïòÌä∏ ÌÅ¨Í∏∞Î•º ÌÇ§Ïö∞Îäî Ïä§ÌÉÄÏùº
                            }}
                        >
                            {likedSongs.includes("Îàà") ? "‚ù§Ô∏è" : "ü§ç"}
                        </button>
                    </div>
                </div>
                <div className="song2">
                    <div className="no">02.</div>
                    <div className="no2">Îã¨</div>
                    <div className="no3">R&B</div>
                    <div className="no4">Ïä§Ìä∏Î†àÏù¥</div>
                    <div className="no5">
                        <button
                            onClick={() => toggleLike("Îã¨")}
                            style={{
                                background: "none",
                                border: "none",
                                cursor: "pointer",
                                fontSize: "24px" // ÌïòÌä∏ ÌÅ¨Í∏∞Î•º ÌÇ§Ïö∞Îäî Ïä§ÌÉÄÏùº
                            }}
                        >
                            {likedSongs.includes("Îã¨") ? "‚ù§Ô∏è" : "ü§ç"}
                        </button>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default Allsong;
